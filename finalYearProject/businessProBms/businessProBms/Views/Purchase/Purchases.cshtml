@using PagedList
@using PagedList.Mvc
@using businessProBms.Models
@model Purchase
@{
    ViewBag.Title = "Purchase";
}
<script src='@Url.Content("~/Scripts/jquery.validate.js")'></script>
<script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")'></script>
<h2>Purchases</h2>
<br />
<form>
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="container">
        <div class="well well-lg"><b>Purchase Order</b></div>
        <div class="master">
            <table class="table table-responsive">
                <tr>
                    <td><b>@Html.LabelFor(m => m.purchaseId)</b></td>
                    <td><b>@Html.LabelFor(m => m.purchaseDate)</b></td>
                    <td><b>@Html.LabelFor(m => m.vendorCode)</b></td>
                </tr>
                <tr>
                    <td>
                        @Html.TextBoxFor(m => m.purchaseId, new { placeholder = "Enter Purchase ID Here..", @class = "form-control",  @readonly = "readonly", id = "pid" })
                        @Html.ValidationMessageFor(m => m.purchaseId)
                        <span class="error">Valid Purchase ID required</span>
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.purchaseDate, new { placeholder = "Format:YYYY/MM/DD ", @class = "form-control", id = "pdate" })
                        @Html.ValidationMessageFor(m => m.purchaseDate)
                        <span class="error">Valid Purchase ID required</span>
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.vendorCode, new SelectList(ViewBag.vendors, "code", "name"),
            "--Select Vendor Here--", new { @class = "form-control", id = "vcode", onchange="myfunc()"})
                        @Html.ValidationMessageFor(m => m.vendorCode)
                        @Html.HiddenFor(m => m.vendorName, new { @class = "form-control", id = "vname" })
                    </td>
                </tr>
            </table>
        </div>
    </div>
</form>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function myfunc() {
        var isAllValid = true;
        if (!($('#pid').val().trim() != '' && (parseInt($('#pid').val(), 10) || 0))) {
            isAllValid = false;
            $('#pid').siblings('span.error').css('visibility', 'visible');
        }
        else {
            $('#pid').siblings('span.error').css('visibility', 'hidden');
        }
        if (isAllValid)
        {
            var e = $("#vcode :selected").text();
            $('#vname').val(e);
            var pur = {};
            pur.purchaseId = $("#pid").val();
            pur.purchaseDate = $("#pdate").val();
            pur.vendorCode = $("#vcode").val();
            pur.vendorName = $("#vname").val();
            $.ajax(
            {
                type: "POST",
                url: '@Url.Action("Add","Purchase")',
                data: '{pur: ' + JSON.stringify(pur) + '}',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    if (result) {
                        loadPid($("#purchaseId"));
                        $('#pid,#pdate').val('');
                    }
                    else
                        alert("Error, OOPS something Went Wrong, Please appropriate Fields");
                }
            });
        }
    }
    function loadPid(element) {
        $.getJSON("/Purchase/getPurchaseIds")
        .done(function(data)
        {
            var options=$("#purchaseId");
            options.empty();
            //options.append($("<option/>").val('0').text('--Select ID(For Detail)--'));
            $.each(data, function(index, item){
                options.append($("<option/>").val(item.value).text(item.text));
            });
        });
    }
     function loadProducts(element) {
        $.getJSON("/Purchase/getProducts")
        .done(function (data) {
            var options = $("#productCode");
            options.empty();
            //options.append($("<option/>").val('0').text('--Select Product--'));
            $.each(data, function (index, item) {
                options.append($("<option/>").val(item.value).text(item.text));
            });
        });
     }
     function load() {
         loadPid($("#purchaseId"));
         loadProducts($("#productCode"));
     }
     window.onload(load()); 
         function validate() {
             //validation and add order items
             var isAllValid = true;
             if (!($('#quantity').val().trim() != '' && (parseInt($('#quantity').val(), 10) || 0))) {
                 isAllValid = false;
                 $('#quantity').siblings('span.error').css('visibility', 'visible');
             }
             else {
                 $('#quantity').siblings('span.error').css('visibility', 'hidden');
             }

             if (!($('#price').val().trim() != '' && (parseFloat($('#price').val(), 10) || 0) && !isNaN($('#price').val().trim()))) {
                 isAllValid = false;
                 $('#price').siblings('span.error').css('visibility', 'visible');
             }
             else {
                 $('#price').siblings('span.error').css('visibility', 'hidden');
             }

             if (isAllValid) {
                 var rows = '';
                 rows += "<tr>"
                 rows += "<td>" + ($("#pid").val() - 1) + "</td>"
                 rows += "<td>" + $("#productCode :selected").val() + "</td>"
                 rows += "<td>" + $("#productCode :selected").text() + "</td>"
                 rows += "<td>" + parseInt($("#quantity").val(), 10) + "</td>"
                 rows += "<td>" + parseFloat($("#price").val(), 10) + "</td>"
                 rows += "<td>" + (parseInt($("#quantity").val(), 10) * parseFloat($("#price").val(), 10)) + "</td>"
                 rows += "</tr>";
                 $("#listPurchase tbody").append(rows);
                  Add();
             }
             $('#orderdetailsItems').on('click', '.remove', function () {
                 $(this).parents('tr').remove();
             });
             
         }
         
         function Add() {
             var e = $("#productCode :selected").text();
             $("#productName").val(e);
             var purD = {};
             purD.purchaseDetailsId = ($("#pid").val()-1);
             purD.serialNo = '';
             purD.productCode = $("#productCode :selected").val();
             purD.productName = $("#productName").val();
             purD.unitOfMeasure = '';
             purD.quantity = parseInt($("#quantity").val(),10);
             purD.purchasePrice = parseFloat($("#price").val(),10);
             $.ajax(
             {
                 type: "POST",
                 url: "/Purchase/AddDetails",
                 data: '{purD: ' + JSON.stringify(purD) + '}',
                 dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    if (result) {
                    }
                    else
                        alert("Error, OOPS something Went Wrong, Please Provide Purchase Id, Purchase Date");
            }
                 });
         }
</script>
<div class="container">
    <div class="details">
<div class="well well-sm"><b>Putchase Details</b></div>
        <table class="table table-responsive">
            <tr>
                @*<td><b>Purchase Order</b></td>*@
                <td><b>Product</b></td>
                <td><b>Quantity</b></td>
                <td><b>Price</b></td>
                <td>&nbsp;</td>
            </tr>
            <tr class="mycontainer" id="mainrow">
                @*<td>
                    <select id="purchaseId" class="Pid form-control">
                        <option>--Select--</option>
                    </select>
                    <span class="error">Select Purchase Id</span>
                </td>*@
                <td>
                    <select id="productCode" class="product form-control">
                        <option>--Select--</option>
                    </select>
                    <input type="hidden" id="productName" />
                    <span class="error">Select product Code</span>
                </td>
                <td>
                    <input type="text" id="quantity" class="quantity form-control" placeholder="Enter Quantity Here.." />
                    <span class="error">Valid quantity required</span>
                </td>
                <td>
                    <input type="text" id="price" class="price form-control" placeholder="Enter Price Here.."  />
                    <span class="error">Valid price required</span>
                </td>
                <td>
                    <input type="button" id="add" value="Add" style="width:80px" class="btn btn-success" onclick="validate()"/>
                    <input type="hidden" id="#serialNo" />
                    <input type="hidden" id="#uom" />
                </td>
            </tr>
        </table>
        <div id="orderItems">
            <table class="table table-responsive" id="orderdetailsItems"></table>
            <span id="orderItemError" style="color:red"></span>
        </div>
        @*<div style="padding:10px 0; text-align:right">
            <a href="@Url.Action("showAll","Purchase")"><input id="submit" type="button" value="See All Purchase Data" class="btn btn-warning" style="padding:10px 20px" /></a>
        </div>*@
    </div>
</div>
<table id="listPurchase" class="table table-bordered">
    <thead>
        <tr>
            <th>Purchase ID</th>
            <th>Product Code</th>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Amount</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<style>
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    tr.error {
        background-color: rgba(255,0,0,0.35);
    }
</style>
<div>
    <a href="@Url.Action("Purchases","Purchase")"><input id="add" type="button" value="New" class="btn btn-primary" /></a>

    <div class="input-group" style="margin-left:820px">
        <span class="input-group-addon">
            <i class="glyphicon glyphicon-search">
            </i>
        </span><input type="text" id="Search" class="form-control" placeholder="Search Here.." />
    </div>
    <table class="table table-bordered table-responsive">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.purchaseId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.purchaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.vendorCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.vendorName)
            </th>
            <th>Action</th>
        </tr>

        @foreach (var item in ViewBag.purchase as List<Purchase>)
        {
            <tr class="Search" id="_row@item.purchaseId">
                <td>
                    @Html.DisplayFor(modelItem => item.purchaseId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.purchaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.vendorCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.vendorName)
                </td>
                <td>

                    <a href="#" onclick="getPurchaseById(@item.purchaseId)"><span class="glyphicon glyphicon-pencil"></span>Edit</a>
                    <a href="#" onclick="getPurchaseDetailsById(@item.purchaseId)"><span class="glyphicon glyphicon-book"></span>Details</a> |
                    <a href="#" onclick="ConfirmDelete(@item.purchaseId)"><span class="glyphicon glyphicon-trash"></span>Delete</a>
                </td>
            </tr>
        }
    </table>
    <input type="hidden" id="purchaseId" />
    <input type="hidden" id="hiddenCode" />
    <div class="modal" id="delModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Are you Sure you want to delete this?</h4>

                    <div class="modal-body">
                        <p>This item <strong>And Its Details</strong> will be deleted permanently. </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" id="close">Close</button>
                        <a href="#" class="btn btn-danger" onclick="DeletePurchase()">Delete</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--Edit Model-->
    <input type="hidden" id="hiddenPurchaseId" />
    <div id="editModel" class="modal fade">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h2 class="modal-title">Purchases</h2>
                <hr />
                <div class="modal-body">
                    <form>
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="container">
                            @*<div class="well well-lg"><b>Purchase Order</b></div>*@
                            <div class="master">
                                <table class="table table-responsive">
                                    <tr>
                                        <td><b>@Html.LabelFor(m => m.purchaseDate)</b></td>
                                        <td><b>@Html.LabelFor(m => m.vendorCode)</b></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.HiddenFor(m => m.purchaseId, htmlAttributes: new { @class = "form-control", id = "pid" })
                                            @Html.TextBoxFor(m => m.purchaseDate, new { placeholder = "Format:YYYY/MM/DD ", @class = "form-control", id = "pdate" })
                                            @Html.ValidationMessageFor(m => m.purchaseDate)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(m => m.vendorCode, new SelectList(ViewBag.vendors, "code", "name"),
            "--Select Vendor Here--", new { @class = "form-control", id = "vcode" })
                                            @Html.ValidationMessageFor(m => m.vendorCode)
                                            @Html.HiddenFor(m => m.vendorName, new { @class = "form-control", id = "vname" })
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnSave" class="btn btn-success" onclick="myfunc()">Save</button>
                    <button type="button" id="btnClose" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!--Details Model Show-->
    <div id="detailsModel" class="modal fade">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h2 class="modal-title">Purchase Details</h2>
                <hr />
                <div class="modal-body">
                    <form>
                        <div class="container">
                            <div class="master">
                                <table class="table table-responsive">
                                    <tr>
                                        <td><b>@Html.LabelFor(m => m.purchaseId)</b></td>
                                        <td><b>@Html.LabelFor(m => m.purchaseDate)</b></td>
                                        <td><b>@Html.LabelFor(m => m.vendorCode)</b></td>
                                        <td><b>@Html.LabelFor(m => m.vendorName)</b></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.TextBoxFor(m => m.purchaseId, htmlAttributes: new { @class = "form-control", id = "pid1", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(m => m.purchaseDate, htmlAttributes: new { @class = "form-control", id = "pdate1", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(m => m.vendorCode, htmlAttributes: new { @class = "form-control", id = "vcode1", @readonly = "readonly" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(m => m.vendorName, htmlAttributes: new { @class = "form-control", id = "vname1", @readonly = "readonly" })
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </form>
                    @*<table id="listPurchase" class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Serial No</th>
                                <th>Product Code</th>
                                <th>Product Name</th>
                                <th>UOM</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>

                        </tbody>
                    </table>*@
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClose" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div id="delDetails" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Are you Sure you want to delete this?</h4>

                    <div class="modal-body">
                        <p>This item will be deleted permanently. </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" id="close">Close</button>
                        <a href="#" class="btn btn-danger" onclick="DeletePurchaseDetails()">Delete</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="editDetails" class="modal fade">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h2 class="modal-title">Purchase Detail</h2>
                <hr />
                <div class="modal-body">
                    <table class="table table-responsive">
                        <tr>
                            <td><b>Purchase Order</b></td>
                            <td><b>Product</b></td>
                            <td><b>Quantity</b></td>
                            <td><b>Price</b></td>
                            <td>&nbsp;</td>
                        </tr>
                        <tr class="mycontainer" id="mainrow">
                            <td>
                                <input type="hidden" id="code" />
                                <select id="purchaseID1" class="Pid form-control">
                                    <option>--Select--</option>
                                </select>
                                @*<span class="error">Select Purchase Id</span>*@
                            </td>
                            <td>
                                <select id="ProductCode1" class="product form-control">
                                    <option>--Select--</option>
                                </select>
                                <input type="hidden" id="ProductName1" />
                                @*<span class="error">Select product Code</span>*@
                            </td>
                            <td>
                                <input type="text" id="Quantity1" class="quantity form-control" placeholder="Enter Quantity Here.." />
                                @*<span class="error">Valid quantity required</span>*@
                            </td>
                            <td>
                                <input type="text" id="Price1" class="price form-control" placeholder="Enter Price Here.." />
                                <!--<span class="error">Valid price required</span>-->
                                <input type="hidden" id="SerialNumber" />
                                <input type="hidden" id="UnitOfMeasure" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnSave" class="btn btn-success" onclick="Add()">Save</button>
                    <button type="button" id="btnClose" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script>
        function getPurchaseById(element) {
            $.ajax({
                url: "/Purchase/getPurchase",
                type: "GET",
                data: { id: element },
                dataType: "json",
                success: function (data) {
                    var date = ToJavaScriptDate(data.purchaseDate);
                    $("#pid").val(data.purchaseId);
                    $("#pdate").val(date);
                    $("#vcode").val(data.vendorCode);
                    $("#vname").val(data.vendorName);
                    //Show Model
                    $("#editModel").modal('show');
                },
                error: function (err) {
                    alert("Error : " + err.responseText);
                }
            });
            //Formating Ticks of Date
            function ToJavaScriptDate(value) {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                // return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                return dt.getFullYear() + "/" + (dt.getMonth() + 1) + "/" + dt.getDate();
            }
        }
        function getPurchaseDetailsById(element) {
            $.ajax({
                url: "/Purchase/getPurchase",
                type: "GET",
                data: { id: element },
                dataType: "json",
                cashe: true,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var date = ToJavaScriptDate(data.purchaseDate);
                    $("#pid1").val(data.purchaseId);
                    $("#pdate1").val(date);
                    $("#vcode1").val(data.vendorCode);
                    $("#vname1").val(data.vendorName);
                    //$("#detailsModel").modal('show');
                    //Calling Another Get Call
                    details(data.purchaseId);

                },
                error: function (err) {
                    alert("Error : " + err.responseText);
                }
            });
            //Formating Ticks of Date
            function ToJavaScriptDate(value) {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                // return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                return dt.getFullYear() + "/" + (dt.getMonth() + 1) + "/" + dt.getDate();
            }
        }
        //function details(element) {
        //    $.ajax({
        //        url: "/Purchase/getPurchaseDetails",
        //        type: "GET",
        //        data: { id: element },
        //        dataType: "json",
        //        success: function (data) {
        //            var rows = '';
        //            $.each(data, function (i, item) {
        //                rows += "<tr id='_row(" + item.code + ")'>"
        //                rows += "<td>" + item.serialNo + "</td>"
        //                rows += "<td>" + item.productCode + "</td>"
        //                rows += "<td>" + item.productName + "</td>"
        //                rows += "<td>" + item.unitOfMeasure + "</td>"
        //                rows += "<td>" + item.quantity + "</td>"
        //                rows += "<td>" + item.purchasePrice + "</td>"
        //                rows += "<td><button type='button' id='btnEdit' class='btn btn-default' onclick='return getDetailsById(" + item.code + ")'>Edit</button><button type='button' id='btnEdit' class='btn btn-danger' onclick='return ConfirmDeleteDetails(" + item.code + ")'>Delete</button></td>"
        //                rows += "</tr>";
        //                $("#listPurchase tbody").html(rows);
        //                //Show Model
        //            });
        //            $("#detailsModel").modal('show');
        //        },
        //        eror: function (err) {
        //            alert("Error : " + err.responseText);
        //        }
        //    });
        //}
        //function getDetailsById(element) {
        //    $("#detailsModel").modal('hide');
        //    $.ajax({
        //        url: "/Purchase/getPurchaseDetail",
        //        type: "GET",
        //        data: { id: element },
        //        dataType: "json",
        //        success: function (data) {

        //            $("#code").val(data.code);
        //            //$("#purchaseID1").val(date.purchaseDetailsId);
        //            $("#SerialNumber").val(data.serialNo);
        //            //$("#ProductCode1").val(data.productCode);
        //            //$("#ProductName1").val(data.productName);
        //            $("#UnitOfMeasure").val(data.unitOfMeasure);
        //            $("#Quantity1").val(data.quantity);
        //            $("#Price1").val(data.purchasePrice);
        //            //Show Model
        //            $("#editDetails").modal('show');
        //        },
        //        error: function (err) {
        //            alert("Error : " + err.responseText);
        //        }
        //    });
        //}
        //function Add() {
        //    var e = $("#ProductCode1  :selected").text();
        //    $("#ProductName1").val(e);
        //    var purD = {};
        //    purd.code = $("code").val();
        //    purD.purchaseDetailsId = $("#purchaseID1").val();
        //    purD.serialNo = $("#SerialNumber").val();
        //    purD.productCode = $("#ProductCode1 :selected").val();
        //    purD.productName = $("#ProductName1").val();
        //    purD.unitOfMeasure = '';
        //    purD.quantity = parseInt($("#Quantity1").val(), 10);
        //    purD.purchasePrice = parseFloat($("#Price1").val(), 10);
        //    alert("End");
        //    $.ajax(
        //    {
        //        type: "POST",
        //        url: "/Purchase/AddEditedDetails",
        //        data: '{purD: ' + JSON.stringify(purD) + '}',
        //        dataType: "json",
        //        contentType: "application/json; charset=utf-8",
        //        success: function (result) {
        //            if (result) {
        //                $("#editDetails").modal('hide');
        //                alert("Edited Succesfully")
        //            }
        //            else
        //                alert("Error, OOPS something Went Wrong, Please Provide Purchase Id, Purchase Date");
        //        }
        //    });
        //}
        //function loadPid(element) {
        //    $.getJSON("/Purchase/getPurchaseIds")
        //    .done(function (data) {
        //        var options = $("#purchaseID1");
        //        options.empty();
        //        //options.append($("<option/>").val('0').text('--Select ID(For Detail)--'));
        //        $.each(data, function (index, item) {
        //            options.append($("<option/>").val(item.value).text(item.text));
        //        });
        //    });
        //}
        //function loadProducts(element) {
        //    $.getJSON("/Purchase/getProducts")
        //    .done(function (data) {
        //        var options = $("#ProductCode1");
        //        options.empty();
        //        //options.append($("<option/>").val('0').text('--Select Product--'));
        //        $.each(data, function (index, item) {
        //            options.append($("<option/>").val(item.value).text(item.text));
        //        });
        //    });
        //}
        //function load() {
        //    loadPid($("#purchaseId"));
        //    loadProducts($("#productCode"));
        //}
        //   window.onload(load());
        function myfunc() {
            var isAllValid = true;
            if (!($('#pid').val().trim() != '' && (parseInt($('#pid').val(), 10) || 0))) {
                isAllValid = false;
                $('#pid').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#pid').siblings('span.error').css('visibility', 'hidden');
            }
            if (isAllValid) {
                var e = $("#vcode :selected").text();
                $('#vname').val(e);
                var pur = {};
                pur.purchaseId = $("#pid").val();
                pur.purchaseDate = $("#pdate").val();
                pur.vendorCode = $("#vcode").val();
                pur.vendorName = $("#vname").val();
                $.ajax(
                {
                    type: "POST",
                    url: '@Url.Action("Add","Purchase")',
                    data: '{pur: ' + JSON.stringify(pur) + '}',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        if (result) {
                            $("#editModel").modal('hide');
                            location.reload();
                        }
                        else
                            alert("Error, OOPS something Went Wrong, Please appropriate Fields");
                    }
                });
            }
        }
        var ConfirmDelete = function (code) {
            $("#hiddenCode").val(code);
            $("#delModal").modal('show');
        }
        var ConfirmDeleteDetails = function (code) {
            $("#hiddenCode").val(code);
            $("#detailsModel").modal('hide');
            $("#delDetails").modal('show');
        }
        var DeletePurchaseDetails = function () {
            var mid = $("#hiddenCode").val();
            $.ajax({
                type: "POST",
                url: "/Purchase/detailDeleteConfirmed",
                data: { id: mid },
                success: function (result) {
                    $("#delDetails").modal("hide");
                    $("#_row_" + mid).remove;
                    window.location = "/Purchase/showAll"
                },
                error: function (result) {
                    alert('OOps,Something bad happened');
                }

            })
        }
        var DeletePurchase = function () {
            var mid = $("#hiddenCode").val();
            $.ajax({
                type: "POST",
                url: "/Purchase/DeleteConfirmed",
                data: { id: mid },
                success: function (result) {
                    $("#myModal").modal("hide");
                    $("#_row_" + mid).remove;
                    window.location = "/Purchase/showAll"
                },
                error: function (result) {
                    alert('OOps,Something bad happened');
                }

            })
        }
        $(document).ready(function () {
            function Contains(text_one, text_two) {
                if (text_one.indexOf(text_two) != -1)
                    return true;
            }
            $("#Search").keyup(function () {
                var searchtext = $("#Search").val().toLowerCase();
                $(".Search").each(function () {
                    if (!Contains($(this).text().toLowerCase(), searchtext)) {
                        $(this).hide();
                    }
                    else {
                        $(this).show();
                    }
                });
            });
        });
    </script>
</div>